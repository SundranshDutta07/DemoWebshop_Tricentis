***DemopWorkShop- Ecommerce project***
 
 
# Project Overview
This project automates core e-commerce functionalities using Katalon Studio. It covers user registration, product search, adding items to the cart dynamically, and completing the checkout process, including assertions and PDF verification.
 
 
# Tech Stack
- Tool: Katalon Studio
- Language: Groovy (for custom keywords)
- Framework: Keyword-Driven with Object Repository
- Assertions: Built-in Katalon verification methods
 
 
# Folder Structure
1. Object Repository (Page-wise structure)
Cart/ â†’ All cart-related elements
Checkout/ â†’ Checkout page elements
Products/ â†’ Search and product selection elements
Registration/ â†’ User registration fields
Login/ â†’ Login and Logout elements
 
2. Custom Keywords (Reusable functions)
Registration.groovy â†’ User registration methods
Category_and_Product.groovy â†’ Dynamic product search, Add to Cart, product selection,etc
CartKeywords.groovy â†’ manage cart
CheckoutKeywords.groovy â†’ Checkout process and assertions
Login_Logout.groovy â†’ Login and Logout function
 
3. Test Cases
Utils->TC_01...Login->Contain test for login & logout
Sanity->TC_02...Registration -> Registers a new user
Sanity->TC_03...E2E_Checkout -> End-to-end scenario covering login, search, add to cart, checkout
 
 
# Key Features 
âœ” Dynamic Object Handling â†’ Product selection and cart addition are fully dynamic. Used Dynamic wait instead of static waits.
âœ” Reusable Custom Keywords â†’ Improves maintainability and efficiency.
âœ” Assertions for Validation â†’ Ensuring accuracy at checkout and success pages.
âœ” PDF Verification â†’ Validates downloaded & takes screenshot of the pdf.
 
 
# Setup & Execution 
1. Clone the Repository
git clone <repo-link>
 
2. Open in Katalon Studio
Load the project and configure the test data if needed.
 
3. Run the Tests
Execute individual test cases or the E2E_TestSuite for full coverage.
 
 
# Reporting & Logs 
Katalonâ€™s built-in reports will generate test execution logs.
Screenshots and error logs are captured bcz of the exception handling used for failed cases.


# Future Enhancements
ðŸ”¹ CI/CD Integration â€“ Automate test execution by integrating with Jenkins/GitHub Actions.
ðŸ”¹ Parallel Execution â€“ Run tests across multiple devices/browsers using TestNG or Katalon capabilities.


# Author: Sundransh Dutta